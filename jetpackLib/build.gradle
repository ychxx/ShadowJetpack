plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-parcelize'
    id 'com.huawei.agconnect'/*二维码 华为*/
}


android {
    compileSdkVersion 30

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }
    lintOptions {
        abortOnError false
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    buildFeatures {
        viewBinding true
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.1'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.2'
    implementation 'com.google.android.material:material:1.2.1'

    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    /**--kotlin 的扩展--**/
    api "org.jetbrains.kotlinx:kotlinx-coroutines-core:$kotlinx_coroutines_version"
    api "org.jetbrains.kotlinx:kotlinx-coroutines-android:$kotlinx_android_version"

    /**--retrofit  网络请求--**/
    api "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:retrofit-mock:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2_version"

    /**--okHttp-logging-interceptor 日志拦截器--**/
    api "com.squareup.okhttp3:logging-interceptor:$okHttpLogging_version"

    /**--log日志--**/
    implementation "com.orhanobut:logger:$logger_version"

    /**--图片加载--**/
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

    /**-- Lifecycle components 生命周期管理--**/
    api "androidx.lifecycle:lifecycle-extensions:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"
    api "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    api "androidx.activity:activity-ktx:$activity_version"
    api "androidx.fragment:fragment:$fragment_version"
    api "androidx.fragment:fragment-ktx:$fragment_version"

    /**--paging3 分页库--**/
    api "androidx.paging:paging-runtime:$paging_version"
    api "androidx.paging:paging-common:$paging_version"
// alternatively - without Android dependencies for tests
//    implementation "androidx.paging:paging-rxjava2:$paging_version"// 可选RxJava2支持
    // implementation "androidx.paging:paging-rxjava3:$paging_version"// 可选RxJava3支持
    implementation "androidx.paging:paging-guava:$paging_version"
// optional - Guava ListenableFuture support
    implementation "androidx.paging:paging-compose:1.0.0-alpha04"// Jetpack Compose Integration

    /**-- Room components SQLite数据库--**/
    api "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    kapt "androidx.room:room-ktx:$room_version"
    implementation "androidx.room:room-rxjava2:$room_version"
    testImplementation "androidx.room:room-testing:$room_version"

    /**--图表--**/
    api "com.github.PhilJay:MPAndroidChart:$mp_android_chart_version"

    /**--DataStore 替代sharePreference--**/
    api "androidx.datastore:datastore-preferences:$datastore_version"
    api "androidx.datastore:datastore-preferences-core:$datastore_version"

    /**--json解析--**/
    api "com.google.code.gson:gson:$gson_version"

    /**--下载--**/
    implementation "org.xutils:xutils:$xutils_version"

    /**-- 加载更多和刷新 --**/
    api "com.scwang.smart:refresh-layout-kernel:$smart_refresh_version"      //核心必须依赖
    implementation "com.scwang.smart:refresh-header-material:$smart_refresh_version"    //谷歌刷新头
    implementation "com.scwang.smart:refresh-footer-classics:$smart_refresh_version"    //经典加载

    /**--状态栏--**/
    implementation "com.gyf.immersionbar:immersionbar:$immersionbar_version"
    implementation "com.gyf.immersionbar:immersionbar-components:$immersionbar_version"
    implementation "com.gyf.immersionbar:immersionbar-ktx:$immersionbar_version"

    /**-- 仿iOS的选择器 --**/
    api 'com.contrarywind:Android-PickerView:4.1.9'

    /**华为扫描二维码 **/
    implementation "com.huawei.hms:scanplus:$scanplus_version"
}